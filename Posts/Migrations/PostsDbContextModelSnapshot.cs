// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posts.Database;

namespace Posts.Migrations
{
    [DbContext(typeof(PostsDbContext))]
    partial class PostsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Posts.Database.BlogPosts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("BlogPosts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "The app is simple to use, and will help you decide on your best furniture fit.",
                            CreatedAt = new DateTime(2020, 8, 14, 10, 45, 19, 5, DateTimeKind.Local).AddTicks(7318),
                            Description = "Rubicon Software Development and Gazzda furniture are proud to launch an augmented reality app.",
                            Slug = "augmented-reality-ios-application",
                            Title = "Augmented Reality iOS Application"
                        },
                        new
                        {
                            Id = 2,
                            Body = "An opinionated commentary, of the most important presentation of the year",
                            CreatedAt = new DateTime(2020, 8, 14, 10, 45, 19, 18, DateTimeKind.Local).AddTicks(8085),
                            Description = "Ever wonder how?",
                            Slug = "internaet-trends-2018",
                            Title = "Internet Trends 2018"
                        });
                });

            modelBuilder.Entity("Posts.Database.BlogPostsTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogPostsId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogPostsId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogPostsTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogPostsId = 1,
                            TagId = 3
                        },
                        new
                        {
                            Id = 2,
                            BlogPostsId = 2,
                            TagId = 3
                        },
                        new
                        {
                            Id = 3,
                            BlogPostsId = 2,
                            TagId = 1
                        },
                        new
                        {
                            Id = 4,
                            BlogPostsId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 5,
                            BlogPostsId = 1,
                            TagId = 4
                        });
                });

            modelBuilder.Entity("Posts.Database.Tags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TagName = "iOS"
                        },
                        new
                        {
                            Id = 2,
                            TagName = ".NET"
                        },
                        new
                        {
                            Id = 3,
                            TagName = "AngularJS"
                        },
                        new
                        {
                            Id = 4,
                            TagName = "Android"
                        });
                });

            modelBuilder.Entity("Posts.Database.BlogPostsTags", b =>
                {
                    b.HasOne("Posts.Database.BlogPosts", "BlogPosts")
                        .WithMany("BlogPostsTags")
                        .HasForeignKey("BlogPostsId")
                        .HasConstraintName("FK_BlogPostsId")
                        .IsRequired();

                    b.HasOne("Posts.Database.Tags", "Tag")
                        .WithMany("BlogPostsTags")
                        .HasForeignKey("TagId")
                        .HasConstraintName("FK_TagId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
